# Container recipe

# NOTE: this definition file depends on features only available in
# Singularity 3.2 and later.
BootStrap: docker
From: ubuntu:18.04
Stage: 18.04_cuda10
%post
    . /.singularity.d/env/10-docker*.sh

%environment
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8
%post
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8

%post
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic universe" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe" >> /etc/apt/sources.list.d/hpccm.list
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        cmake \
        dirmngr \
        freeglut3-dev \
        git \
        gpg-agent \
        libglu1-mesa \
        libglu1-mesa-dev \
        libx11-dev \
        libxi-dev \
        libxmu-dev \
        locales \
        pyqt5-dev \
        python-pip \
        python-pyqt5 \
        python-tk \
        software-properties-common \
        ubuntu-desktop \
        vim \
        wget
    rm -rf /var/lib/apt/lists/*

# GNU compiler
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        g++-6 \
        gcc-6
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    update-alternatives --install /usr/bin/gcc gcc $(which gcc-6) 30
    update-alternatives --install /usr/bin/g++ g++ $(which g++-6) 30
    update-alternatives --install /usr/bin/gcov gcov $(which gcov-6) 30

%post
    cd /
    apt upgrade -y

%post
    cd /
    locale-gen en_AU.UTF-8
    mkdir -p /tmp/cuda10
    cd /tmp/cuda10
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.1.168-1_amd64.deb
    dpkg -i cuda-repo-ubuntu1804_10.1.168-1_amd64.deb
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    apt-get update
    apt install -y cuda-10-1

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libfftw3-dev \
        libopenmpi-dev \
        libopenmpi2 \
        libtiff-dev
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    mkdir -p /opt/buildRelion
    mkdir -p /opt/relion-3.0.7
    cd /opt/buildRelion
    git clone -b 3.0.7 https://github.com/3dem/relion.git
    cd relion
    mkdir build
    cd build
    cmake -DCMAKE_INSTALL_PREFIX=/opt/relion-3.0.7 ..
    make -j 1
    make install

%files
    MotionCor2_1.3.0.zip /opt/MotionCor2_1.3.0/MotionCor2_1.3.0.zip

%post
    cd /
    cd /opt/MotionCor2_1.3.0/
    unzip MotionCor2_1.3.0.zip
    rm MotionCor2_1.3.0.zip

%files
    Gctf_v1.06_and_examples.tar.gz /opt/Gctf_v1.06_and_examples.tar.gz

%post
    cd /
    cd /opt
    tar -zxvf Gctf_v1.06_and_examples.tar.gz

%files
    cuda8.0/lib /opt/Gctf_v1.06/

%files
    ctffind-4.1.8-linux64.tar.gz /opt/ctffind-4.1.8/ctffind-4.1.8-linux64.tar.gz

%post
    cd /
    cd /opt/ctffind-4.1.8
    tar -zxvf ctffind-4.1.8-linux64.tar.gz

%labels
    HARDWARE gpu
    MAINTAINER jay.vanschyndel@monash.edu

# NOTE: this definition file depends on features only available in
# Singularity 3.2 and later.
BootStrap: docker
From: ubuntu:18.04
Stage: final
%post
    . /.singularity.d/env/10-docker*.sh

# GNU compiler runtime
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libgomp1
    rm -rf /var/lib/apt/lists/*

%environment
    export CTFFINDBINPATH=/opt/ctffind-4.1.8/bin
    export CUDABINPATH=/usr/local/cuda-10.1/bin
    export CUDALIBPATH=/usr/local/cuda-10.1/lib64/stubs:/usr/local/cuda-10.1/lib64/:/usr/local/cuda-10.1/lib
    export GCTFBINPATH=/opt/Gctf_v1.06/bin
    export GCTFLIBPATH=/opt/Gctf_v1.06/lib
    export MOTIONCOR2BINPATH=/opt/MotionCor2_1.3.0
    export RELIONBINPATH=/opt/relion-3.0.7/bin
    export RELIONLIBPATH=/opt/relion-3.0.7/lib:/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu/openmpi/lib
    export RELION_CTFFIND_EXECUTABLE=/opt/ctffind-4.1.8/bin/ctffind
    export RELION_GCTF_EXECUTABLE=/opt/Gctf_v1.06/bin/Gctf-v1.06_sm_30_cu8.0_x86_64
    export RELION_MOTIONCOR2_EXECUTABLE=/opt/MotionCor2_1.3.0/MotionCor2_1.3.0-Cuda101
    export RELION_PDFVIEWER_EXECUTABLE=okular
    export RELION_QSUB_EXTRA1=account
    export RELION_QSUB_EXTRA1_DEFAULT=account
    export RELION_QSUB_EXTRA2=time
    export RELION_QSUB_EXTRA2_DEFAULT=16:00:00
    export RELION_QSUB_EXTRA_COUNT=2
    export RELION_QSUB_TEMPLATE=/usr/local/relion/3.0.7/scripts/Submit_template_1xNode_2xK80.sh

%environment
    export LD_LIBRARY_PATH=$RELIONLIBPATH:$GCTFLIBPATH:$CUDALIBPATH:$LD_LIBRARY_PATH
    export PATH=$GCTFBINPATH:$CTFFINDBINPATH:$MOTIONCOR2BINPATH:$RELIONBINPATH:$CUDABINPATH:$PATH

%environment
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8
%post
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8

%post
    cd /
    apt upgrade -y

%post
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic universe" >> /etc/apt/sources.list.d/hpccm.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe" >> /etc/apt/sources.list.d/hpccm.list
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        dirmngr \
        evince \
        freeglut3 \
        gpg-agent \
        libfftw3-3 \
        libfltk-gl1.3 \
        libglu1-mesa \
        libgtk3-nocsd0 \
        libtiff5 \
        libx11-6 \
        libxi6 \
        libxmu6 \
        locales \
        okular \
        openmpi-bin \
        openssh-server \
        software-properties-common \
        ssl-cert \
        tcsh \
        ubuntu-desktop \
        wget
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    cd /tmp
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/turbovnc_2.1.2_amd64.deb
    dpkg -i turbovnc_2.1.2_amd64.deb
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/virtualgl_2.5.2_amd64.deb
    dpkg -i virtualgl_2.5.2_amd64.deb

%post
    cd /
    locale-gen en_AU.UTF-8
    mkdir -p /tmp/cuda10
    cd /tmp/cuda10
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.1.168-1_amd64.deb
    dpkg -i cuda-repo-ubuntu1804_10.1.168-1_amd64.deb
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    apt-get update
    apt install -y cuda-10-1

%files from 18.04_cuda10
    /opt/relion-3.0.7/bin /opt/relion-3.0.7/bin

%files from 18.04_cuda10
    /opt/relion-3.0.7/lib /opt/relion-3.0.7/lib

%files from 18.04_cuda10
    /opt/MotionCor2_1.3.0 /opt/MotionCor2_1.3.0

%files from 18.04_cuda10
    /opt/Gctf_v1.06/bin /opt/Gctf_v1.06/bin

%files from 18.04_cuda10
    /opt/Gctf_v1.06/lib /opt/Gctf_v1.06/lib

%post
    cd /
    chmod -R g-w,o+rx /opt/Gctf_v1.06/lib

%files from 18.04_cuda10
    /opt/ctffind-4.1.8/bin /opt/ctffind-4.1.8/bin

%runscript
    exec $* "$@"
