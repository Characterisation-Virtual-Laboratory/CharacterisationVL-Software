# Generated by: Neurodocker version stebo85/issue8
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2020/12/15 02:42:09 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: neurodebian:stretch-non-free

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

printf '#!/bin/bash\nls -la' > /usr/bin/ll

chmod +x /usr/bin/ll

mkdir /afm01 /afm02 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch /vnm

apt-get update -qq
echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
apt-get install -y -qq  git
apt-get install -y -q --no-install-recommends libxt6

apt-get install -y -q --no-install-recommends libxext6
apt-get install -y -q --no-install-recommends libxtst6
apt-get install -y -q --no-install-recommends libgl1-mesa-glx
apt-get install -y -q --no-install-recommends libc6
apt-get install -y -q --no-install-recommends libice6
apt-get install -y -q --no-install-recommends libsm6
apt-get install -y -q --no-install-recommends libx11-6
apt-get clean
rm -rf /var/lib/apt/lists/*

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading ashs ..."
curl -fsSL --retry 5 -o /tmp/ashs.zip "https://www.nitrc.org/frs/download.php/10887/ashs-fastashs_2.0.0_07202018.zip"
unzip /tmp/ashs.zip -d /
ln -s /ashs-fastashs_beta/ /opt/ashs-2.0.0
echo "Downloading atlas compatible with version 2.0.0 ..."
mkdir /ashs_atlas_magdeburg_7t_20180416
curl -fsSL --retry 5 http://ashs.projects.nitrc.org/atlas_magdeburg/ashs_atlas_magdeburg_7t_20180416.tgz \
      | tar -xz -C /ashs_atlas_magdeburg_7t_20180416


echo "Downloading ANTs ..."
mkdir -p /opt/ants-2.3.0
curl -fsSL --retry 5 https://dl.dropbox.com/s/b3iymb9ml36ecp9/ants-Linux-centos6_x86_64-v2.3.0.tar.gz \
| tar -xz -C /opt/ants-2.3.0 --strip-components 1

git clone https://github.com/thomshaw92/LASHiS/ /LASHiS

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "neurodebian:stretch-non-free"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "run",
\n      "printf '"'"'#!/bin/bash\\\nls -la'"'"' > /usr/bin/ll"
\n    ],
\n    [
\n      "run",
\n      "chmod +x /usr/bin/ll"
\n    ],
\n    [
\n      "run",
\n      "mkdir /afm01 /afm02 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch /vnm"
\n    ],
\n    [
\n      "install",
\n      [
\n        "git",
\n        "libxt6",
\n        "libxext6",
\n        "libxtst6",
\n        "libgl1-mesa-glx",
\n        "libc6",
\n        "libice6",
\n        "libsm6",
\n        "libx11-6"
\n      ]
\n    ],
\n    [
\n      "ashs",
\n      {
\n        "version": "2.0.0"
\n      }
\n    ],
\n    [
\n      "ants",
\n      {
\n        "version": "2.3.0"
\n      }
\n    ],
\n    [
\n      "run",
\n      "git clone https://github.com/thomshaw92/LASHiS/ /LASHiS"
\n    ],
\n    [
\n      "entrypoint",
\n      "/LASHiS/LASHiS.sh"
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export PATH="/opt/ashs-2.0.0/bin:$PATH"
export ASHS_ROOT="/opt/ashs-2.0.0"
export ANTSPATH="/opt/ants-2.3.0"
export PATH="/opt/ants-2.3.0:$PATH"

%runscript
/LASHiS/LASHiS.sh
